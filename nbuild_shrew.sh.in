#!/bin/sh
#
# $Id: nightly_dods_build.sh,v 1.3.2.13 2004/06/14 20:57:23 jimg Exp $
#
# Build code checked out from svn using te shrew project
# Usage: copy the .in file to a plain file, set the build recorder username and password and 
# the os name. Then run the script

USER_PW=""
os_name=""
make_rpm=""
make_pkg=""

do_the_build="yes"
process_the_logs="yes"

logs_archive="logs"

# First build, then process all of the log files and upload the results

# Clean, update and initialize shrew
if test "$do_the_build" = "yes"
then

    rm make.*.log
    rm src/modules/make.*.log

    make distclean
    svn update --accept theirs-full
    autoreconf --verbose --force --install
    ./configure

    # Build libdap
    make libdap
    make libdap-check

    # Now the BES
    make bes
    make bes-check

    # Now the modules
    make modules
    make modules-check

    # Now run the packaging targets

    make libdap-distcheck
    make bes-distcheck
    make modules-distcheck

    if test -n "$make_rpm"
    then
	make libdap-rpm
	make bes-rpm
    fi

    if test -n "$make_pkg"
    then
	make libdap-pkg
    fi

fi

if test "$process_the_logs" = "yes"
then

host_full=`hostname`
host="`hostname | sed 's/\([^\.]*\)\..*/\1/'`"

if test -n "$os_name"
then
    host=${host}_${os_name}
fi

date=`date +%Y.%m.%d`
platform=`conf/config.guess`
target=all

for build_name in libdap bes dap-server fileout_netcdf freeform_handler hdf4_handler hdf5_handler \
    ncml_module netcdf_handler
do

    make_log=${host}.${platform}.${build_name}.${target}.${date}

    echo "Build of ${build_name} using target ${target} on `date`" > $make_log
    echo "Built on ${host_full}, ${platform} (`uname -a`)" >> $make_log

    if test "$build_name" = "libdap" -o "$build_name" = "bes"
    then
	cat make.$build_name.log >> $make_log
    else
	cat src/modules/make.$build_name.log >> $make_log
    fi

    echo "_______________________________________________________" >> $make_log
    echo "Build completed at `date`." >> $make_log 2>&1

    build_status=`grep '^%%% make status: [01]$' $make_log | sed 's@.*\([01]\)@\1@'`
    install_status=`grep '^%%% install status: [01]$' $make_log | sed 's@.*\([01]\)@\1@'`
    check_status=`grep '^%%% check status: [01]$' $make_log | sed 's@.*\([01]\)@\1@'`
    distcheck_status=`grep '^%%% distcheck status: [01]$' $make_log | sed 's@.*\([01]\)@\1@'`

    if test "$make_rpm" = "yes"
    then
	rpm_status=`grep '^%%% rpm status: [01]$' $make_log | sed 's@.*\([01]\)@\1@'`
    else
	rpm_status="N/A"
    fi

    # TODO: Fix this. Maybe just use 'RPM'???
    if test "$make_pkg" = "yes"
    then
	pkg_status=`grep '^%%% pkg status: [01]$' $make_log | sed 's@.*\([01]\)@\1@'`
    else
	pkg_status="N/A"
    fi

    results="compile: $build_status, check: $check_status, install: $install_status, distcheck: $distcheck_status, rpm: $rpm_status, pkg: $pkg_status"

    echo "Results: $results" >> $make_log 2>&1

    # now record the build on the test machine...

    curl --digest --user $USER_PW "http://test.opendap.org/cgi-bin/build_recorder.pl?host=${host}&build=${build_name}&platform=${platform}&date=${date}&compile=${build_status}&check=${check_status}&install=${install_status}&distcheck=${distcheck_status}&rpm=${rpm_status}" > /dev/null 2>&1

    # Copy the log file to test.opendap.org

    curl --digest --user $USER_PW -F name=${make_log} -F uploaded_file=@${make_log} http://test.opendap.org/cgi-bin/build_log_copy.pl > /dev/null 2>&1

    # keep some log file copies on the local host too...

    if test ! -d $logs_archive
    then
	mkdir $logs_archive
    fi

    very_old=`find $logs_archive -ctime +10`
    if test -n "$very_old"
    then
	rm -f $very_old
    fi

    mv $make_log $logs_archive 2> /dev/null

done

fi
